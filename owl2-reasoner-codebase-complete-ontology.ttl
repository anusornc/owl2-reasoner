@prefix : <http://example.org/owl2-reasoner-codebase#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix doap: <http://usefulinc.com/ns/doap#> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix code: <http://example.org/code-ontology#> .

# Ontology Header
<http://example.org/owl2-reasoner-codebase> a owl:Ontology ;
    rdfs:label "OWL2 Reasoner Codebase Ontology" ;
    rdfs:comment "Comprehensive ontology representing the OWL2 Reasoner Rust codebase architecture, components, and relationships" ;
    owl:versionInfo "1.0" .

# Class Definitions
:Codebase a owl:Class ;
    rdfs:label "Codebase" ;
    rdfs:comment "A software codebase collection" ;
    rdfs:subClassOf prov:Entity .

:Module a owl:Class ;
    rdfs:label "Module" ;
    rdfs:comment "A software module or component" ;
    rdfs:subClassOf prov:Entity .

:Struct a owl:Class ;
    rdfs:label "Struct" ;
    rdfs:comment "A Rust struct definition" ;
    rdfs:subClassOf :CodeEntity .

:Enum a owl:Class ;
    rdfs:label "Enum" ;
    rdfs:comment "A Rust enum definition" ;
    rdfs:subClassOf :CodeEntity .

:Trait a owl:Class ;
    rdfs:label "Trait" ;
    rdfs:comment "A Rust trait definition" ;
    rdfs:subClassOf :CodeEntity .

:Function a owl:Class ;
    rdfs:label "Function" ;
    rdfs:comment "A function or method" ;
    rdfs:subClassOf :CodeEntity .

:CodeEntity a owl:Class ;
    rdfs:label "Code Entity" ;
    rdfs:comment "Any code entity (struct, enum, trait, function)" ;
    rdfs:subClassOf prov:Entity .

:File a owl:Class ;
    rdfs:label "File" ;
    rdfs:comment "A source code file" ;
    rdfs:subClassOf prov:Entity .

:Directory a owl:Class ;
    rdfs:label "Directory" ;
    rdfs:comment "A directory in the codebase" ;
    rdfs:subClassOf prov:Entity .

:Parser a owl:Class ;
    rdfs:label "Parser" ;
    rdfs:comment "A parser implementation" ;
    rdfs:subClassOf :Module .

:Reasoner a owl:Class ;
    rdfs:label "Reasoner" ;
    rdfs:comment "A reasoning engine implementation" ;
    rdfs:subClassOf :Module .

:Test a owl:Class ;
    rdfs:label "Test" ;
    rdfs:comment "A test case or test suite" ;
    rdfs:subClassOf :CodeEntity .

:Benchmark a owl:Class ;
    rdfs:label "Benchmark" ;
    rdfs:comment "A performance benchmark" ;
    rdfs:subClassOf :CodeEntity .

:Dependency a owl:Class ;
    rdfs:label "Dependency" ;
    rdfs:comment "An external dependency" ;
    rdfs:subClassOf prov:Entity .

:Configuration a owl:Class ;
    rdfs:label "Configuration" ;
    rdfs:comment "Configuration settings" ;
    rdfs:subClassOf :CodeEntity .

:Axiom a owl:Class ;
    rdfs:label "Axiom" ;
    rdfs:comment "OWL2 axiom implementation" ;
    rdfs:subClassOf :CodeEntity .

:Entity a owl:Class ;
    rdfs:label "Entity" ;
    rdfs:comment "OWL2 entity implementation" ;
    rdfs:subClassOf :CodeEntity .

:Profile a owl:Class ;
    rdfs:label "Profile" ;
    rdfs:comment "OWL2 profile implementation" ;
    rdfs:subClassOf :Module .

:Algorithm a owl:Class ;
    rdfs:label "Algorithm" ;
    rdfs:comment "An algorithm implementation" ;
    rdfs:subClassOf :CodeEntity .

:Storage a owl:Class ;
    rdfs:label "Storage" ;
    rdfs:comment "A storage backend implementation" ;
    rdfs:subClassOf :Module .

:Cache a owl:Class ;
    rdfs:label "Cache" ;
    rdfs:comment "A caching implementation" ;
    rdfs:subClassOf :Module .

# Property Definitions
:hasModule a owl:ObjectProperty ;
    rdfs:label "has module" ;
    rdfs:comment "A codebase contains modules" ;
    rdfs:domain :Codebase ;
    rdfs:range :Module .

:hasFile a owl:ObjectProperty ;
    rdfs:label "has file" ;
    rdfs:comment "A directory contains files" ;
    rdfs:domain :Directory ;
    rdfs:range :File .

:hasFunction a owl:ObjectProperty ;
    rdfs:label "has function" ;
    rdfs:comment "A module or struct has functions" ;
    rdfs:domain :CodeEntity ;
    rdfs:range :Function .

:hasStruct a owl:ObjectProperty ;
    rdfs:label "has struct" ;
    rdfs:comment "A module has structs" ;
    rdfs:domain :Module ;
    rdfs:range :Struct .

:hasEnum a owl:ObjectProperty ;
    rdfs:label "has enum" ;
    rdfs:comment "A module has enums" ;
    rdfs:domain :Module ;
    rdfs:range :Enum .

:hasTrait a owl:ObjectProperty ;
    rdfs:label "has trait" ;
    rdfs:comment "A module has traits" ;
    rdfs:domain :Module ;
    rdfs:range :Trait .

:dependsOn a owl:ObjectProperty ;
    rdfs:label "depends on" ;
    rdfs:comment "A module depends on another module" ;
    rdfs:domain :Module ;
    rdfs:range :Module .

:implements a owl:ObjectProperty ;
    rdfs:label "implements" ;
    rdfs:comment "A struct implements a trait" ;
    rdfs:domain :Struct ;
    rdfs:range :Trait .

:uses a owl:ObjectProperty ;
    rdfs:label "uses" ;
    rdfs:comment "A function uses a struct or enum" ;
    rdfs:domain :Function ;
    rdfs:range :CodeEntity .

:hasDependency a owl:ObjectProperty ;
    rdfs:label "has dependency" ;
    rdfs:comment "A codebase has external dependencies" ;
    rdfs:domain :Codebase ;
    rdfs:range :Dependency .

:hasTest a owl:ObjectProperty ;
    rdfs:label "has test" ;
    rdfs:comment "A module has tests" ;
    rdfs:domain :Module ;
    rdfs:range :Test .

:hasBenchmark a owl:ObjectProperty ;
    rdfs:label "has benchmark" ;
    rdfs:comment "A module has benchmarks" ;
    rdfs:domain :Module ;
    rdfs:range :Benchmark .

:hasConfiguration a owl:ObjectProperty ;
    rdfs:label "has configuration" ;
    rdfs:comment "A module has configuration" ;
    rdfs:domain :Module ;
    rdfs:range :Configuration .

:hasAxiomType a owl:ObjectProperty ;
    rdfs:label "has axiom type" ;
    rdfs:comment "A reasoning module supports axiom types" ;
    rdfs:domain :Reasoner ;
    rdfs:range :Axiom .

:supportsFormat a owl:ObjectProperty ;
    rdfs:label "supports format" ;
    rdfs:comment "A parser supports a specific format" ;
    rdfs:domain :Parser ;
    rdfs:range xsd:string .

:hasPerformance a owl:DatatypeProperty ;
    rdfs:label "has performance" ;
    rdfs:comment "Performance characteristics" ;
    rdfs:domain :CodeEntity ;
    rdfs:range xsd:string .

:hasComplexity a owl:DatatypeProperty ;
    rdfs:label "has complexity" ;
    rdfs:comment "Computational complexity" ;
    rdfs:domain :Algorithm ;
    rdfs:range xsd:string .

:hasMemoryUsage a owl:DatatypeProperty ;
    rdfs:label "has memory usage" ;
    rdfs:comment "Memory usage characteristics" ;
    rdfs:domain :CodeEntity ;
    rdfs:range xsd:string .

:filePath a owl:DatatypeProperty ;
    rdfs:label "file path" ;
    rdfs:comment "Path to the source file" ;
    rdfs:domain :File ;
    rdfs:range xsd:string .

:lineCount a owl:DatatypeProperty ;
    rdfs:label "line count" ;
    rdfs:comment "Number of lines in a file" ;
    rdfs:domain :File ;
    rdfs:range xsd:integer .

:testCount a owl:DatatypeProperty ;
    rdfs:label "test count" ;
    rdfs:comment "Number of tests" ;
    rdfs:domain :Module ;
    rdfs:range xsd:integer .

:benchmarkCount a owl:DatatypeProperty ;
    rdfs:label "benchmark count" ;
    rdfs:comment "Number of benchmarks" ;
    rdfs:domain :Module ;
    rdfs:range xsd:integer .

:version a owl:DatatypeProperty ;
    rdfs:label "version" ;
    rdfs:comment "Version information" ;
    rdfs:domain :CodeEntity ;
    rdfs:range xsd:string .

:description a owl:DatatypeProperty ;
    rdfs:label "description" ;
    rdfs:comment "Description of the entity" ;
    rdfs:domain :CodeEntity ;
    rdfs:range xsd:string .

# Main Codebase Entity
:owl2-reasoner-codebase a :Codebase, doap:Project ;
    rdfs:label "OWL2 Reasoner Codebase" ;
    rdfs:comment "High-performance OWL2 reasoning system implemented in Rust" ;
    doap:name "owl2-reasoner" ;
    doap:programming-language "Rust" ;
    doap:license "MIT" ;
    :version "0.1.0" ;
    :description "Comprehensive OWL2 reasoning system with tableaux-based SROIQ(D) support" ;
    :testCount 285 ;
    :hasPerformance "High-performance with arena allocation and concurrent data structures" ;
    :hasModule :core-module, :parser-module, :reasoning-module, :storage-module, :caching-module, :profiles-module, :memory-module ;
    :hasDependency :thiserror-dependency, :serde-dependency, :criterion-dependency, :hashbrown-dependency, :smallvec-dependency .

# Core Modules
:core-module a :Module ;
    rdfs:label "Core Module" ;
    rdfs:comment "Core data model and fundamental types" ;
    :description "Contains fundamental OWL2 data structures and types" ;
    :testCount 45 ;
    :hasFile :lib-rs-file, :iri-rs-file, :entities-rs-file, :axioms-rs-file, :ontology-rs-file ;
    :dependsOn :memory-module .

:parser-module a :Module ;
    rdfs:label "Parser Module" ;
    rdfs:comment "Multi-format OWL2 parser implementations" ;
    :description "Supports Turtle, RDF/XML, OWL/XML, and OWL Functional Syntax" ;
    :testCount 67 ;
    :hasFile :parser-directory, :turtle-rs-file, :rdf-xml-rs-file, :owl-xml-rs-file, :owl-functional-rs-file ;
    :dependsOn :core-module, :caching-module ;
    :supportsFormat "Turtle" ;
    :supportsFormat "RDF/XML" ;
    :supportsFormat "OWL/XML" ;
    :supportsFormat "OWL Functional Syntax" ;
    :supportsFormat "N-Triples" .

:reasoning-module a :Module ;
    rdfs:label "Reasoning Module" ;
    rdfs:comment "Tableaux-based reasoning engine implementations" ;
    :description "SROIQ(D) tableaux reasoning with classification and consistency checking" ;
    :testCount 38 ;
    :hasFile :reasoning-directory, :simple-rs-file, :tableaux-rs-file, :classification-rs-file, :consistency-rs-file ;
    :dependsOn :core-module, :storage-module, :caching-module .

:storage-module a :Module ;
    rdfs:label "Storage Module" ;
    rdfs:comment "Storage backend implementations" ;
    :description "Memory and indexed storage backends" ;
    :testCount 12 ;
    :hasFile :storage-rs-file ;
    :dependsOn :core-module .

:caching-module a :Module ;
    rdfs:label "Caching Module" ;
    rdfs:comment "Caching infrastructure implementations" ;
    :description "Bounded LRU caching with performance monitoring" ;
    :testCount 15 ;
    :hasFile :cache-rs-file, :cache-manager-rs-file ;
    :dependsOn :core-module, :memory-module .

:profiles-module a :Module ;
    rdfs:label "Profiles Module" ;
    rdfs:comment "OWL2 profile implementations" ;
    :description "EL, QL, and RL profile validation and optimization" ;
    :testCount 18 ;
    :hasFile :profiles-directory, :el-rs-file, :ql-rs-file, :rl-rs-file ;
    :dependsOn :reasoning-module, :core-module .

:memory-module a :Module ;
    rdfs:label "Memory Module" ;
    rdfs:comment "Memory management and optimization" ;
    :description "Memory pressure detection and optimization" ;
    :testCount 8 ;
    :hasFile :memory-rs-file .

# Key Files
:lib-rs-file a :File ;
    rdfs:label "lib.rs" ;
    rdfs:comment "Main library entry point" ;
    :filePath "src/lib.rs" ;
    :lineCount 150 ;
    :description "Main library file with module exports and API surface" .

:iri-rs-file a :File ;
    rdfs:label "iri.rs" ;
    rdfs:comment "IRI management and caching" ;
    :filePath "src/iri.rs" ;
    :lineCount 1200 ;
    :description "Global IRI caching with namespace support and validation" ;
    :hasStruct :iri-struct, :iri-registry-struct, :iri-cache-struct .

:entities-rs-file a :File ;
    rdfs:label "entities.rs" ;
    rdfs:comment "OWL2 entity definitions" ;
    :filePath "src/entities.rs" ;
    :lineCount 800 ;
    :description "Complete OWL2 entity types with validation" ;
    :hasStruct :class-struct, :object-property-struct, :data-property-struct, :named-individual-struct ;
    :hasEnum :entity-type-enum, :literal-type-enum .

:axioms-rs-file a :File ;
    rdfs:label "axioms.rs" ;
    rdfs:comment "OWL2 axiom implementations" ;
    :filePath "src/axioms/mod.rs" ;
    :lineCount 2000 ;
    :description "40+ OWL2 axiom types with full functionality" ;
    :hasStruct :subclass-axiom-struct, :equivalent-classes-axiom-struct, :property-assertion-axiom-struct ;
    :hasEnum :axiom-type-enum, :axiom-enum .

:ontology-rs-file a :File ;
    rdfs:label "ontology.rs" ;
    rdfs:comment "Ontology management" ;
    :filePath "src/ontology.rs" ;
    :lineCount 600 ;
    :description "Central ontology management with indexing and validation" ;
    :hasStruct :ontology-struct, :ontology-builder-struct .

:turtle-rs-file a :File ;
    rdfs:label "turtle.rs" ;
    rdfs:comment "Turtle parser implementation" ;
    :filePath "src/parser/turtle.rs" ;
    :lineCount 1500 ;
    :description "Full Turtle 1.1 support with blank node handling" ;
    :hasStruct :turtle-parser-struct, :turtle-config-struct ;
    :hasFunction :parse-turtle-function, :parse-blank-node-function, :parse-predicate-object-pair-function .

:rdf-xml-rs-file a :File ;
    rdfs:label "rdf_xml.rs" ;
    rdfs:comment "RDF/XML parser implementation" ;
    :filePath "src/parser/rdf_xml.rs" ;
    :lineCount 1800 ;
    :description "Comprehensive RDF/XML parsing with validation" ;
    :hasStruct :rdf-xml-parser-struct, :rdf-xml-config-struct ;
    :hasFunction :parse-rdf-xml-function, :parse-with-rio-function, :create-named-individual-function .

:owl-functional-rs-file a :File ;
    rdfs:label "owl_functional.rs" ;
    rdfs:comment "OWL Functional Syntax parser" ;
    :filePath "src/parser/owl_functional.rs" ;
    :lineCount 1200 ;
    :description "Complete OWL Functional Syntax parsing" ;
    :hasStruct :owl-functional-parser-struct, :owl-functional-config-struct ;
    :hasFunction :parse-owl-functional-function, :parse-data-property-assertion-function, :parse-literal-function .

:simple-rs-file a :File ;
    rdfs:label "simple.rs" ;
    rdfs:comment "Simple reasoner implementation" ;
    :filePath "src/reasoning/simple.rs" ;
    :lineCount 800 ;
    :description "Bounded caching reasoner with profile validation" ;
    :hasStruct :simple-reasoner-struct, :reasoning-config-struct ;
    :hasFunction :classify-function, :check-consistency-function, :validate-profile-function .

:tableaux-rs-file a :File ;
    rdfs:label "tableaux.rs" ;
    rdfs:comment "Tableaux reasoning engine" ;
    :filePath "src/reasoning/tableaux.rs" ;
    :lineCount 1500 ;
    :description "SROIQ(D) tableaux reasoning with dependency-directed backtracking" ;
    :hasStruct :tableaux-reasoner-struct, :tableaux-graph-struct, :tableaux-node-struct ;
    :hasFunction :expand-tableaux-function, :apply-rules-function, :check-sat-function .

# Key Structs
:iri-struct a :Struct ;
    rdfs:label "IRI" ;
    rdfs:comment "Internationalized Resource Identifier" ;
    :description "Thread-safe IRI with validation and caching" ;
    :hasPerformance "Arena-allocated with global interning" ;
    :hasFunction :new-function, :resolve-function, :validate-function .

:ontology-struct a :Struct ;
    rdfs:label "Ontology" ;
    rdfs:comment "OWL2 Ontology representation" ;
    :description "Central ontology management with entity indexing" ;
    :hasFunction :add-class-function, :add-property-function, :add-axiom-function ;
    :hasPerformance "Thread-safe with Arc sharing" .

:turtle-parser-struct a :Struct ;
    rdfs:label "TurtleParser" ;
    rdfs:comment "Turtle format parser" ;
    :description "Full Turtle 1.1 parser with namespace support" ;
    :hasFunction :parse-function, :parse-str-function, :parse-blank-node-function ;
    :hasPerformance "Arena-allocated with error recovery" .

:tableaux-reasoner-struct a :Struct ;
    rdfs:label "TableauxReasoner" ;
    rdfs:comment "Tableaux-based reasoning engine" ;
    :description "SROIQ(D) tableaux reasoning with optimization" ;
    :hasFunction :is-satisfiable-function, :classify-function, :find-explanations-function ;
    :hasPerformance "Dependency-directed backtracking with blocking" .

:simple-reasoner-struct a :Struct ;
    rdfs:label "SimpleReasoner" ;
    rdfs:comment "Simple reasoning engine" ;
    :description "Bounded caching reasoner with profile validation" ;
    :hasFunction :is-consistent-function, :classify-function, :get-entailments-function ;
    :hasPerformance "LRU cache with 1000 entry default" .

# Key Enums
:axiom-enum a :Enum ;
    rdfs:label "Axiom" ;
    rdfs:comment "OWL2 axiom types" ;
    :description "Comprehensive OWL2 axiom representation" ;
    :hasValue :subclass-of-axiom, :equivalent-classes-axiom, :property-assertion-axiom, :class-assertion-axiom .

:entity-type-enum a :Enum ;
    rdfs:label "EntityType" ;
    rdfs:comment "OWL2 entity types" ;
    :description "Classification of OWL2 entities" ;
    :hasValue :class-entity, :object-property-entity, :data-property-entity, :named-individual-entity .

# Key Functions
:parse-turtle-function a :Function ;
    rdfs:label "parse_turtle" ;
    rdfs:comment "Parse Turtle format content" ;
    :description "Main Turtle parsing function with validation" ;
    :hasPerformance "Streaming parser with arena allocation" ;
    :uses :turtle-parser-struct, :iri-struct, :ontology-struct .

:parse-rdf-xml-function a :Function ;
    rdfs:label "parse_rdf_xml" ;
    rdfs:comment "Parse RDF/XML format content" ;
    :description "Main RDF/XML parsing function" ;
    :hasPerformance "Rio-based parser with validation" ;
    :uses :rdf-xml-parser-struct, :iri-struct, :ontology-struct .

:is-consistent-function a :Function ;
    rdfs:label "is_consistent" ;
    rdfs:comment "Check ontology consistency" ;
    :description "Consistency checking using tableaux algorithm" ;
    :hasComplexity "NExptime for SROIQ(D)" ;
    :uses :tableaux-reasoner-struct, :ontology-struct .

:classify-function a :Function ;
    rdfs:label "classify" ;
    rdfs:comment "Classify ontology classes" ;
    :description "Classification using optimized tableaux algorithm" ;
    :hasComplexity "NExptime for SROIQ(D)" ;
    :uses :tableaux-reasoner-struct, :ontology-struct .

# Axiom Types
:subclass-axiom a :Axiom ;
    rdfs:label "SubClassOfAxiom" ;
    rdfs:comment "Subclass relationship between classes" ;
    :description "Represents subclass relationships in OWL2" .

:equivalent-classes-axiom a :Axiom ;
    rdfs:label "EquivalentClassesAxiom" ;
    rdfs:comment "Equivalent class relationships" ;
    :description "Represents equivalent class relationships" .

:property-assertion-axiom a :Axiom ;
    rdfs:label "PropertyAssertionAxiom" ;
    rdfs:comment "Property assertion about individuals" ;
    :description "Represents property assertions with named or anonymous individuals" .

:class-assertion-axiom a :Axiom ;
    rdfs:label "ClassAssertionAxiom" ;
    rdfs:comment "Class membership assertion" ;
    :description "Represents class membership for individuals" .

# OWL2 Profiles
:el-profile a :Profile ;
    rdfs:label "EL Profile" ;
    rdfs:comment "OWL2 EL profile implementation" ;
    :description "Efficient reasoning for large ontologies" ;
    :hasPerformance "Polynomial time reasoning" ;
    :supportsAxiom :subclass-axiom, :equivalent-classes-axiom, :property-assertion-axiom .

:ql-profile a :Profile ;
    rdfs:label "QL Profile" ;
    rdfs:comment "OWL2 QL profile implementation" ;
    :description "Query rewriting and data integration" ;
    :hasPerformance "Polynomial time reasoning" ;
    :supportsAxiom :subclass-axiom, :property-assertion-axiom .

:rl-profile a :Profile ;
    rdfs:label "RL Profile" ;
    rdfs:comment "OWL2 RL profile implementation" ;
    :description "Rule-based reasoning and scalability" ;
    :hasPerformance "Polynomial time reasoning" ;
    :supportsAxiom :subclass-axiom, :property-assertion-axiom, :class-assertion-axiom .

# Dependencies
:thiserror-dependency a :Dependency ;
    rdfs:label "thiserror" ;
    rdfs:comment "Structured error handling" ;
    :description "Derive error types in Rust" ;
    :version "1.0" .

:serde-dependency a :Dependency ;
    rdfs:label "serde" ;
    rdfs:comment "Serialization framework" ;
    :description "Serialization and deserialization framework" ;
    :version "1.0" .

:criterion-dependency a :Dependency ;
    rdfs:label "criterion" ;
    rdfs:comment "Benchmarking framework" ;
    :description "Statistical benchmarking" ;
    :version "0.5" .

:hashbrown-dependency a :Dependency ;
    rdfs:label "hashbrown" ;
    rdfs:comment "Faster hash tables" ;
    :description "Port of Google's SwissTable hash tables" ;
    :version "0.14" .

:smallvec-dependency a :Dependency ;
    rdfs:label "smallvec" ;
    rdfs:comment "Small vector optimization" ;
    :description "Stack-allocated small vectors" ;
    :version "1.11" .

# Performance Characteristics
:performance-optimizations a :Algorithm ;
    rdfs:label "Performance Optimizations" ;
    rdfs:comment "Key performance optimizations in the codebase" ;
    :description "Arena allocation, SmallVec optimization, concurrent data structures" ;
    :hasPerformance "High-performance with memory efficiency" ;
    :hasMemoryUsage "Optimized with arena allocation and interning" ;
    :hasComplexity "Varies by algorithm (Polynomial to NExptime)" .

# Technical Achievements
:technical-achievements a :CodeEntity ;
    rdfs:label "Technical Achievements" ;
    rdfs:comment "Key technical achievements of the codebase" ;
    :description "Comprehensive OWL2 implementation with advanced features" ;
    :hasPerformance "3,111+ lines of production-ready code" ;
    :hasMemoryUsage "Memory-efficient IRI management with global caching" ;
    :hasComplexity "Supports 40+ OWL2 axiom types" ;
    :version "Production-ready" .